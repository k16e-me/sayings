---
const { id, small, asDiv, smallAndDiv, class: parentClass, ...props } = Astro.props
---
{
    () => {
        if (small) {
            return (
                <button
                    { ...props }
                    class:list={[ parentClass, `h-11 w-11 bg-white flex items-center justify-center rounded-full shadow hover:shadow-xl transition duration-300 opacity-80 hover:opacity-100`]}
                    id={ id }>
                    <slot/>
                </button>
            )
        } else if (asDiv) {
            return (
                <div
                    { ...props }
                    class:list={[ parentClass, `h-14 w-14 bg-slate-100 flex items-center justify-center rounded-full shadow hover:shadow-xl transition duration-300 opacity-80 hover:opacity-100`]}
                    id={ id }>
                    <slot/>
                </div>
            )
        } else if (smallAndDiv) {
            return (
                <div
                    { ...props }
                    class:list={[ parentClass, `h-11 w-11 flex items-center justify-center rounded-full shadow hover:shadow-xl transition duration-300 opacity-80 hover:opacity-100`]}
                    id={ id }>
                    <slot/>
                </div>
            )
        } else {
            return (
                <button
                    class:list={[ parentClass, `h-14 w-14 bg-slate-100 flex items-center justify-center rounded-full shadow hover:shadow-xl transition duration-300 opacity-80 hover:opacity-100`]}
                    id={ id }>
                    <slot/>
                </button>
            )
        }
    }
}