---
import Icon from 'astro-icon'
import Fab from './Fab.astro'
---
<aside
    class="fixed inset-y-0 right-0 z-50 flex items-center ml-auto !m-0 h-dvh opacity-0 translate-x-full transition duration-300 ease-in-out"
    id="slideover">
    <div class="bg-white dark:bg-neutral-900 w-[344px] sm:w-[424px] rounded-2xl h-full max-h-[calc(100vh-80px)] mr-3 sm:mr-9 overflow-clip">
        <div class="flex flex-col flex-shrink-0 h-full">
            <div class="bg-slate-100 dark:bg-neutral-800 flex items-center justify-between pr-5 shadow h-16">
                <h2 class="font-display text-xl p-5 h-full flex items-center text-slate-950 dark:text-white">
                    <span id="slideoverTitle" class="-mb-1"/>
                </h2>
                <Fab id="close" small class:list={ `dark:bg-neutral-700 dark:text-fuchsia-300` }>
                    <Icon name="close" class="w-5"/>
                    <span class="sr-only">Close</span>
                </Fab>
            </div>
            <div class="flex-1 overflow-auto p-5 relative">
                <slot/>
            </div>
        </div>
    </div>
</aside>

<script>
    import {
        $, $$, translateIn, translateOut, hidden, body, dimOn, dimOff
    } from '../js/snips'

    Slideover()

    function Slideover() {
        if ($('#slideover')) {
            const
                slideoverToggles = $$('[data-toggle="slideover"]'),
                slideover = $('#slideover'),
                close = $('#close', slideover),
                backdrop = $('[data-backdrop]'),
                links = $$('[data-link]'),
                slideoverContent = $$('[data-slideover]', slideover),
                slideoverTitle = $('#slideoverTitle', slideover)

            hideSlideoverContent(slideoverContent)

            slideoverToggles.forEach(toggle => {
                toggle.addEventListener('click', (e) => {
                    const
                        clickedEl = e.target,
                        attr = clickedEl.getAttribute('data-slideover'),
                        slideoverContentToShow = slideoverContent.find(el => (el.dataset.slideover === attr)),
                        title = slideoverContentToShow.getAttribute('data-slideover-title')

                    showSlideoverContent(slideoverContentToShow)
                    slideoverTitle.textContent = title

                    dimOn(backdrop)
                    body().style.overflow = 'hidden'
                    backdrop.classList.remove(...hidden())
                    slideover.classList.add(...translateIn())
                    slideover.classList.remove(...translateOut())
                })
            })

            backdrop.addEventListener('click', () => removeSlideover())
            close.addEventListener('click', () => removeSlideover())
            links.map(link => link.addEventListener('click', () => removeSlideover()))

            function removeSlideover() {
                dimOff(backdrop)
                body().style.overflow = 'auto'
                slideover.classList.remove(...translateIn())
                slideover.classList.add(...translateOut())
                hideSlideoverContent(slideoverContent)
                setTimeout(() => backdrop.classList.add(...hidden()), 300)
            }

            function hideSlideoverContent(elAll) { elAll.forEach(elOne => elOne.classList.add('sr-only')) }
            function showSlideoverContent(el) { el.classList.remove('sr-only') }
        }
    }
</script>