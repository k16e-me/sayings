---
import { SEO } from 'astro-seo'
import { pwaInfo } from 'virtual:pwa-info'

const { title, image, description = '' } = Astro.props
---
<head>
	<meta charset='UTF-8'/>
	<meta name='viewport' content='width=device-width'/>
	<link rel='icon' type='image/svg+xml' href='/favicon.svg'/>
    <meta name="generator" content={ Astro.generator }/>
    <meta name="view-transition" content="same-origin" />
    <link type="text/plain" rel="author" href={ `${Astro.url.href}humans.txt` } />
    <link rel='apple-touch-icon' sizes='180x180' href='/favicons/apple-touch-icon.png'/>
    <link rel='icon' type='image/png' sizes='32x32' href='/favicons/favicon-32x32.png'/>
    <link rel='icon' type='image/png' sizes='16x16' href='/favicons/favicon-16x16.png'/>
    <link rel='icon' type='image/x-icon' href='/favicon.ico'/>
    <meta name="msapplication-TileColor" content="#020617"/>
    <meta name="msapplication-TileImage" content="/favicons/favicon-144x144.png"/>
    <meta name="msapplication-config" content="/browserconfig.xml"/>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg"/>
    <meta name="theme-color" content="#020617"/>
	<SEO
        title={ title }
        titleDefault="These are the Sayings of Kabolobari"
        description={ description }
        openGraph={{
            basic: {
                title: title ,
                type: 'website',
                image: image,
            }
        }}
        canonical={ Astro.url.href }
    />
    { pwaInfo && <Fragment set:html={pwaInfo.webManifest.linkTag}/> }
    <script src="/src/pwa.ts"></script>
</head>
<script is:inline>
    setTheme()

    function setTheme() {
        let
            theme = localStorage.getItem('theme'),
            html = document.documentElement

        theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'
        localStorage.setItem('theme', theme)

        if (html.classList.contains(theme)) return
        html.classList.add(theme)
    }
</script>